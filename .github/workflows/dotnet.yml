name: Build and Test

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Initialize
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Clean project
        run: dotnet clean

      - name: Set package version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "No tag found, using default package version"
            echo "VERSION=1.0.0" >> $GITHUB_ENV
          fi

      - name: Build
        run: dotnet build -c Release /p:Version=${{ env.VERSION }} --no-restore

      - name: Deterministic build check
        run: |
          dotnet tool install --global dotnet-validate --version 0.0.1-preview.537
          dotnet pack Monero/Monero.csproj -c Release /p:PackageVersion=${{ env.VERSION }} --no-build -o nuget-packages
          dotnet validate package local nuget-packages/MoneroNet.${{ env.VERSION }}.nupkg

      - name: Run unit tests
        run: |
          dotnet tool install --global JetBrains.dotCover.CommandLineTools --version 2025.1.6
          dotCover cover-dotnet --TargetArguments="test Monero.UnitTests/Monero.UnitTests.csproj -c Release --no-build" --output=coverage/dotCover.UnitTests.output.dcvr

      - name: Run integration tests
        run: docker compose -f Monero.IntegrationTests/docker-compose.yml run tests
    
      - name: Cleanup Docker containers
        if: always()
        run: docker compose -f Monero.IntegrationTests/docker-compose.yml down -v

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/dotcover.xml

      - name: Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package-${{ github.sha }}
          path: nuget-packages/MoneroNet.${{ env.VERSION }}.nupkg

      - name: Trigger the release workflow when git tag pushed
        if: startsWith( github.ref, 'refs/tags/v' )
        uses: peter-evans/repository-dispatch@v3
        with:
          event-type: release-event
          client-payload: '{"sha": "${{ github.sha }}"}'